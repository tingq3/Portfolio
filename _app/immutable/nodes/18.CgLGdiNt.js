import"../chunks/Bzak7iHL.js";import"../chunks/BrSviv_y.js";import{p as W,f as c,a as _,t as l,b as n,d as X,s as r,c as a,r as e,g as p,u as Y,e as Z,h as $}from"../chunks/CqJIQQO_.js";import{s as o}from"../chunks/BNXcmpPd.js";import{i as aa}from"../chunks/DrT6SMKp.js";import{H as ea,e as I,i as S,s as R}from"../chunks/BIHngStS.js";import{i as ra}from"../chunks/DA7TMSXw.js";import{b as ta}from"../chunks/BYzdk-V8.js";var sa=c('<a class="pill"> </a>'),oa=c('<span class="pill status complete"> </span>'),ia=c('<h3> </h3> <div class="tags"><!></div>',1),na=c(`<!> <main class="container"><h2> </h2> <p>A full-stack F1 prediction platform where friends pick race outcomes and compete on
    season-long leaderboards. Players make picks per Grand Prix, results are ingested
    after the race, and scores/placements update instantly.</p> <h3>Project goals</h3> <p> </p> <h3>Developing</h3> <p> </p> <p>This repo includes a typed API layer, database migrations, and an admin dashboard
    for race data management.</p> <!> <div class="links"><div><img src="/github.png" alt="GitHub"/> <p><strong>View the code on GitHub</strong><br/> <a target="_blank">tingq3/F1_LightGod</a></p></div></div></main>`,1);function ha(T,B){W(B,!1);const i={title:"F1 LightGod â€” Race Prediction & Rankings",goals:"A next.js powered web app for my friend group to predict F1 race outcomes, auto-rank players across seasons, and display live driver/constructor standings. Users submit race predictions per driver; the app scores results after each GP and updates all-time leaderboards.",dev:"Built as a full-stack project with typed APIs and strict schema control. Admin tools let me add races, drivers, and official results; a background job recalculates points and tiebreakers. Auth separates admin vs normal users, and RLS-style rules protect user data. CI runs type checks and DB migrations on every deploy.",tags:{Languages:["TypeScript","Python"],Skills:["version-control","full-stack"],Frameworks:["nextjs"],Status:"In Progress"},links:{github:"https://github.com/poko0320/F1_LightGod"}};ra();var b=na(),k=_(b);ea(k,{path:"projects/f1-lightgod"});var y=r(k,2),v=a(y),D=a(v,!0);e(v);var m=r(v,6),q=a(m,!0);e(m);var u=r(m,4),C=a(u,!0);e(u);var x=r(u,4);I(x,1,()=>Object.entries(i.tags),S,(U,V)=>{var G=Y(()=>$(p(V),2));let w=()=>p(G)[0],g=()=>p(G)[1];var F=ia(),h=_(F),z=a(h,!0);e(h);var H=r(h,2),E=a(H);{var J=t=>{var s=Z(),f=_(s);I(f,1,g,S,(M,L)=>{var d=sa(),N=a(d,!0);e(d),l(Q=>{R(d,"href",Q),o(N,p(L))},[()=>ta(w(),p(L))]),n(M,d)}),n(t,s)},K=t=>{var s=oa(),f=a(s,!0);e(s),l(()=>o(f,g())),n(t,s)};aa(E,t=>{Array.isArray(g())?t(J):t(K,!1)})}e(H),l(()=>o(z,w())),n(U,F)});var P=r(x,2),j=a(P),A=r(a(j),2),O=r(a(A),3);e(A),e(j),e(P),e(y),l(()=>{o(D,i.title),o(q,i.goals),o(C,i.dev),R(O,"href",i.links.github)}),n(T,b),X()}export{ha as component};
