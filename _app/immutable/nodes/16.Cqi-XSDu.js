import"../chunks/Bzak7iHL.js";import"../chunks/BrSviv_y.js";import{p as W,f as m,a as v,t as n,b as s,d as z,s as g,c as t,r,g as o,u as B,e as E,h as F}from"../chunks/CqJIQQO_.js";import{s as p}from"../chunks/BNXcmpPd.js";import{i as G}from"../chunks/DrT6SMKp.js";import{H as K,e as I,i as C,s as Q}from"../chunks/BREaV5gu.js";import{i as R}from"../chunks/DA7TMSXw.js";import{b as V}from"../chunks/BxT1CqX-.js";var X=m('<a class="pill"> </a>'),Y=m('<span class="pill status complete"> </span>'),Z=m('<h3> </h3> <div class="tags"><!></div>',1),$=m('<!> <main class="container"><h2> </h2> <p>Dungeon Mania is a project I created in <a href="https://www.handbook.unsw.edu.au/undergraduate/courses/2021/COMP2511" target="_blank">UNSW Comp2511 Course</a>, It is a complex dungeon crawler game which I completed as the leader of a small team of students. The gameâ€™s rules were designed to challenge our design skills, with extremely complex requirements for player and enemy movement.</p> <p>In order to implement this project, we made heavy use of design patterns and the object-oriented paradigm to encapsulate complex behaviours in simple interfaces.</p> <p>As this project was a university project, the source code is not public. However, I am able to grant access to potential employers on request.</p> <!></main>',1);function pe(H,O){W(O,!1);const h={title:"Dungeon Mania",tags:{Languages:["Java"],Skills:["Object-Oriented-Programming","Design-Patterns"],Status:"Complete"}};R();var f=$(),_=v(f);K(_,{path:"projects/dungeonmania"});var b=g(_,2),l=t(b),A=t(l,!0);r(l);var D=g(l,8);I(D,1,()=>Object.entries(h.tags),C,(M,P)=>{var w=B(()=>F(o(P),2));let x=()=>o(w)[0],c=()=>o(w)[1];var y=Z(),d=v(y),S=t(d,!0);r(d);var j=g(d,2),q=t(j);{var T=e=>{var a=E(),u=v(a);I(u,1,c,C,(L,k)=>{var i=X(),N=t(i,!0);r(i),n(U=>{Q(i,"href",U),p(N,o(k))},[()=>V(x(),o(k))]),s(L,i)}),s(e,a)},J=e=>{var a=Y(),u=t(a,!0);r(a),n(()=>p(u,c())),s(e,a)};G(q,e=>{Array.isArray(c())?e(T):e(J,!1)})}r(j),n(()=>p(S,x())),s(M,y)}),r(b),n(()=>p(A,h.title)),s(H,f),z()}export{pe as component};
